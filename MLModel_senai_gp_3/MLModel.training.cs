﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace MLModel_senai_gp_3
{
    public partial class MLModel
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new []{new InputOutputColumnPair(@"sexo", @"sexo"),new InputOutputColumnPair(@"raca_cor", @"raca_cor"),new InputOutputColumnPair(@"municipio", @"municipio"),new InputOutputColumnPair(@"vacina_fabricante", @"vacina_fabricante"),new InputOutputColumnPair(@"sistema_origem", @"sistema_origem")})      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"_id", @"_id"),new InputOutputColumnPair(@"idade", @"idade"),new InputOutputColumnPair(@"descricao_dose", @"descricao_dose")}))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"faixa_etaria", @"faixa_etaria"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"categoria", @"categoria"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lote", @"lote"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"cnes", @"cnes"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"data_vacinacao", @"data_vacinacao"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"sexo",@"raca_cor",@"municipio",@"vacina_fabricante",@"sistema_origem",@"_id",@"idade",@"descricao_dose",@"faixa_etaria",@"categoria",@"lote",@"cnes",@"data_vacinacao"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(@"grupo", @"grupo"))      
                                    .Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(l1Regularization:1F,l2Regularization:1F,labelColumnName:@"grupo",featureColumnName:@"Features"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

            return pipeline;
        }
    }
}
